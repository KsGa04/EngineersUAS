swagger: '2.0'
info:
  description: "API для StudentSearch"
  version: "1.0.0"
  title: "StudentSearch API"
host: "localhost:5000"
basePath: "/"
tags:
  - name: "auth"
    description: "Авторизация и регистрация"
  - name: "protected"
    description: "Защищенные API"
schemes:
  - "http"
paths:
  /api/{table_name}:
    post:
      summary: "Добавить данные в указаную таблицу"
      parameters:
        - name: "table_name"
          in: "path"
          required: true
          description: "Таблица, куда добавить данные"
          type: "string"
        - in: "body"
          name: "body"
          description: "Данные"
          required: true
          schema:
            type: "object"
      responses:
        200:
          description: "Добавлено в таблицу"
        400:
          description: "He добавлено"

  /api/auth/register:
    post:
      tags:
        - "auth"
      summary: "Регистрация пользователя"
      description: "Создание новой учетной записи"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - in: "formData"
          name: "email"
          type: "string"
          required: true
          description: "Email пользователя"
        - in: "formData"
          name: "password"
          type: "string"
          required: true
          description: "Пароль пользователя"
        - in: "formData"
          name: "role"
          type: "string"
          required: true
          description: "Роль пользователя (student, employer, admin)"
          enum:
            - "student"
            - "employer"
            - "admin"
        - in: "formData"
          name: "first_name"
          type: "string"
          required: true
          description: "Имя пользователя"
        - in: "formData"
          name: "last_name"
          type: "string"
          required: true
          description: "Фамилия пользователя"
        - in: "formData"
          name: "phone"
          type: "string"
          required: false
          description: "Телефон пользователя"
        - in: "formData"
          name: "telegram_username"
          type: "string"
          required: false
          description: "Имя пользователя в Telegram"
        - in: "formData"
          name: "city"
          type: "string"
          required: false
          description: "Город проживания пользователя"
        - in: "formData"
          name: "image"
          type: "file"
          required: false
          description: "Изображение профиля пользователя (опционально)"
      responses:
        201:
          description: "Пользователь успешно зарегистрирован"
        400:
          description: "Пользователь уже существует"

  /api/auth/login:
    post:
      tags:
        - "auth"
      summary: "Авторизация пользователя"
      description: "Вход в систему"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Данные для входа"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
              password:
                type: "string"
      responses:
        200:
          description: "Успешная авторизация"
        401:
          description: "Неверные данные"

  /api/auth/protected:
    get:
      tags:
        - "protected"
      summary: "Защищенный маршрут"
      description: "Доступен только авторизованным пользователям"
      produces:
        - "application/json"
      responses:
        200:
          description: "Успешный доступ"
  /api/resume/pattern1/{user_id}:
    get:
      summary: "Получить резюме пользователя"
      description: "Возвращает резюме пользователя по его ID"
      parameters:
        - name: user_id
          in: path
          required: true
          description: "Идентификатор пользователя"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Успешное получение резюме"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeResponse'
        '404':
          description: "Пользователь или резюме не найдены"
        '500':
          description: "Ошибка на стороне сервера"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: "ID пользователя"
        name:
          type: string
          description: "Имя пользователя"
        email:
          type: string
          description: "Email пользователя"
        birth_date:
          type: string
          format: date
          description: "Дата рождения пользователя"

    ResumeResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        education_list:
          type: array
          items:
            $ref: '#/components/schemas/Education'
        experience_list:
          type: array
          items:
            $ref: '#/components/schemas/Experience'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        age:
          type: string
          description: "Возраст пользователя"

    Education:
      type: object
      properties:
        degree_name:
          type: string
          description: "Название степени"
        university_name:
          type: string
          description: "Название университета"
        start_date:
          type: string
          format: date
          description: "Дата начала обучения"
        end_date:
          type: string
          format: date
          description: "Дата окончания обучения"

    Experience:
      type: object
      properties:
        position:
          type: string
          description: "Должность"
        organization_name:
          type: string
          description: "Название компании"
        start_date:
          type: string
          format: date
          description: "Дата начала работы"
        end_date:
          type: string
          format: date
          description: "Дата окончания работы"
        responsibilities:
          type: array
          items:
            type: string
            description: "Обязанности на данной должности"

    Skill:
      type: object
      properties:
        skill_name:
          type: string
          description: "Название навыка"

    Project:
      type: object
      properties:
        project_name:
          type: string
          description: "Название проекта"
        project_description:
          type: string
          description: "Описание проекта"
        project_link:
          type: string
          description: "Ссылка на проект"
        project_skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
